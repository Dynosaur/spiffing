// This file is autogenerated; changes may be overwritten.

import { User, Post, Response, DataResponse } from '../interface';

export class CreatedResponse extends Response {
    public status: 'CREATED';
    constructor(message: string) {
        super('CREATED', message);
    }
}
export class IncompleteResponse extends Response {
    public status: 'INCOMPLETE';
    constructor(message: string, public param: string, public scope: string) {
        super('INCOMPLETE', message);
    }
}
export class MalformedResponse extends Response {
    public status: 'MALFORMED';
    constructor(message: string) {
        super('MALFORMED', message);
    }
}
export class NoChangeResponse extends DataResponse<string[]> {
    public status: 'NO_CHANGE';
    constructor(message: string, possibleParams: string[]) {
        super('NO_CHANGE', message, possibleParams);
    }
}
export class NoResultsResponse extends Response {
    public status: 'NO_RESULTS';
    constructor(message: string) {
        super('NO_RESULTS', message);
    }
}
export class OkResponse extends Response {
    public status: 'OK';
    constructor(message: string) {
        super('OK', message);
    }
}
export class RejectedResponse extends Response {
    public status: 'REJECTED';
    constructor(message: string) {
        super('REJECTED', message);
    }
}

export type ExaminedResponse = IncompleteResponse | NoChangeResponse | MalformedResponse | RejectedResponse | { status: 'MISSING_RECORD'; message: string; };

export type AuthenticateResponse = OkResponse | ExaminedResponse;

export type RegisterResponse = CreatedResponse | OkResponse | ExaminedResponse;

export class GetUserSuccessResponse extends DataResponse<User> {
    public status: 'OK';
    constructor(message: string, data: User) {
        super('OK', message, data);
    }
}
export type GetUserResponse = GetUserSuccessResponse | NoResultsResponse;

export class GetPostsSuccessResponse extends DataResponse<Post[]> {
    public status: 'OK';
    constructor(message: string, data: Post[]) {
        super('OK', message, data);
    }
}
export type GetPostsResponse = GetPostsSuccessResponse | NoResultsResponse;

export interface CreatePostRequest {
    author: string;
    title: string;
    content: string;
}
export type CreatePostResponse = CreatedResponse | ExaminedResponse;

export type DeregisterResponse = OkResponse | ExaminedResponse;

export interface ChangeUserDataRequest {
    username: string;
    password: string;
}
export type ChangeUserDataResponse = {
    status: 'OK';
    updated: string[];
} | ExaminedResponse;
